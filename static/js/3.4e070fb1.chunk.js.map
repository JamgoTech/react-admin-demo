{"version":3,"sources":["../../../packages/ra-data-graphql/esm/introspection.js","../../../packages/ra-data-graphql/esm/index.js","../../../packages/ra-data-graphql-simple/esm/buildQuery.js","../../../packages/ra-data-graphql/esm/buildApolloClient.js","../../../packages/ra-data-graphql/esm/constants.js","../../../packages/ra-data-graphql-simple/esm/getFinalType.js","../../../packages/ra-data-graphql-simple/esm/isList.js","../../../packages/ra-data-graphql-simple/esm/buildVariables.js","../../../packages/ra-data-graphql-simple/esm/isRequired.js","../../../packages/ra-data-graphql-simple/esm/buildGqlQuery.js","../../../packages/ra-data-graphql-simple/esm/getResponseParser.js","../../../packages/ra-data-graphql-simple/esm/index.js","dataProvider/graphql.js"],"names":["templateObject_1","esm_a","buildVariablesImpl","buildGqlQueryImpl","getResponseParserImpl","__assign","Object","assign","t","s","i","n","arguments","length","p","prototype","hasOwnProperty","call","apply","this","__rest","e","indexOf","getOwnPropertySymbols","QUERY_TYPES","dataFetchActions","MUTATION_TYPES","ALL_TYPES","concat","__makeTemplateObject","cooked","raw","defineProperty","value","introspection_assign","__awaiter","thisArg","_arguments","P","generator","Promise","resolve","reject","fulfilled","step","next","rejected","result","done","then","__generator","body","f","y","g","_","label","sent","trys","ops","verb","throw","return","Symbol","iterator","v","op","TypeError","pop","push","esm_assign","esm_awaiter","esm_generator","esm_rest","esm_QUERY_TYPES","defaultOptions","resolveIntrospection","client","options","undefined","schema","_a","queries","types","isResource","buildResource","potentialResources","filteredResources","resources","_b","query","fetchPolicy","src_default","introspectionQuery","data","__schema","reduce","acc","type","name","queryType","mutationType","fields","filter","some","operationNames","aorFetchType","find","include","exclude","Array","isArray","includes","filterTypesByIncludeExclude","map","introspection","resource","pluralize_default","getOptions","esm","clientObject","clientOptions","buildQueryFactory","override","otherOptions","introspectionResults","buildQuery","raDataProvider","_c","merge_default","console","warn","bundle_esm","cache","link","uri","finalLink","finalCache","lib","restore","buildApolloClient","params","overriddenBuildQuery","get_default","parseResponse","apolloQuery_1","apolloQuery","mutation","variables","mutate","observeRequest","watchQuery","saga","esm_getFinalType","getFinalType","kind","type_introspection","NON_NULL","LIST","ofType","esm_isList","isList","buildVariables_assign","sanitizeValue","parseInt","parseFloat","prepareParams","keys","forEach","key","param","arg","args","item","File","inputFields","Number","String","Boolean","castType","buildCreateUpdateVariables","a","id","esm_isRequired","isRequired","buildGqlQuery_rest","buildGqlQuery_buildArgs","validVariables","k","graphql_ast_types_browser_lib","buildGqlQuery_buildApolloArgs","required","buildGqlQuery_getArgType","getResponseParser_assign","esm_buildQuery","preparedParams","_d","_e","_f","_g","ids","filterSome","filter_1","parts","split","resourceField_1","resourceField","type_2","isAList","page","pagination","perPage","sortField","sort","field","sortOrder","order","buildVariables_buildGetListVariables","target","metaVariables","apolloArgs","metaArgs","buildFields","path","startsWith","OBJECT","INTERFACE","r","linkedType","buildGqlQuery_buildFields","response","sanitize","sanitizeResource","linkedResource","linkedResourceData","d","getResponseParser_sanitizeResource","items","total","count","knownResources","resourceName","Error","join","ra_data_graphql_simple_esm_assign","ra_data_graphql_simple_esm_rest","esm_defaultOptions","ra_data_graphql_simple_esm_buildQuery","customBuildQuery","DELETE","gql","_templateObject","_ref","__webpack_exports__","defaultDataProvider","fetchType","otherParams_1","all","results","data_1","otherParams_2","dataProvider","getGqlResource"],"mappings":"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","file":"static/js/3.4e070fb1.chunk.js","sourcesContent":["var __makeTemplateObject = this && this.__makeTemplateObject || function (cooked, raw) {\n  if (Object.defineProperty) {\n    Object.defineProperty(cooked, \"raw\", {\n      value: raw\n    });\n  } else {\n    cooked.raw = raw;\n  }\n\n  return cooked;\n};\n\nvar __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n\n      for (var p in s) {\n        if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n      }\n    }\n\n    return t;\n  };\n\n  return __assign.apply(this, arguments);\n};\n\nvar __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function step(result) {\n      result.done ? resolve(result.value) : new P(function (resolve) {\n        resolve(result.value);\n      }).then(fulfilled, rejected);\n    }\n\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\n\nvar __generator = this && this.__generator || function (thisArg, body) {\n  var _ = {\n    label: 0,\n    sent: function sent() {\n      if (t[0] & 1) throw t[1];\n      return t[1];\n    },\n    trys: [],\n    ops: []\n  },\n      f,\n      y,\n      t,\n      g;\n  return g = {\n    next: verb(0),\n    \"throw\": verb(1),\n    \"return\": verb(2)\n  }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function () {\n    return this;\n  }), g;\n\n  function verb(n) {\n    return function (v) {\n      return step([n, v]);\n    };\n  }\n\n  function step(op) {\n    if (f) throw new TypeError(\"Generator is already executing.\");\n\n    while (_) {\n      try {\n        if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n        if (y = 0, t) op = [op[0] & 2, t.value];\n\n        switch (op[0]) {\n          case 0:\n          case 1:\n            t = op;\n            break;\n\n          case 4:\n            _.label++;\n            return {\n              value: op[1],\n              done: false\n            };\n\n          case 5:\n            _.label++;\n            y = op[1];\n            op = [0];\n            continue;\n\n          case 7:\n            op = _.ops.pop();\n\n            _.trys.pop();\n\n            continue;\n\n          default:\n            if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {\n              _ = 0;\n              continue;\n            }\n\n            if (op[0] === 3 && (!t || op[1] > t[0] && op[1] < t[3])) {\n              _.label = op[1];\n              break;\n            }\n\n            if (op[0] === 6 && _.label < t[1]) {\n              _.label = t[1];\n              t = op;\n              break;\n            }\n\n            if (t && _.label < t[2]) {\n              _.label = t[2];\n\n              _.ops.push(op);\n\n              break;\n            }\n\n            if (t[2]) _.ops.pop();\n\n            _.trys.pop();\n\n            continue;\n        }\n\n        op = body.call(thisArg, _);\n      } catch (e) {\n        op = [6, e];\n        y = 0;\n      } finally {\n        f = t = 0;\n      }\n    }\n\n    if (op[0] & 5) throw op[1];\n    return {\n      value: op[0] ? op[1] : void 0,\n      done: true\n    };\n  }\n};\n\nvar _this = this;\n\nimport { introspectionQuery } from 'graphql';\nimport gql from 'graphql-tag';\nimport { GET_LIST, GET_ONE } from 'ra-core';\nimport { ALL_TYPES } from './constants';\nexport var filterTypesByIncludeExclude = function filterTypesByIncludeExclude(_a) {\n  var include = _a.include,\n      exclude = _a.exclude;\n\n  if (Array.isArray(include)) {\n    return function (type) {\n      return include.includes(type.name);\n    };\n  }\n\n  if (typeof include === 'function') {\n    return function (type) {\n      return include(type);\n    };\n  }\n\n  if (Array.isArray(exclude)) {\n    return function (type) {\n      return !exclude.includes(type.name);\n    };\n  }\n\n  if (typeof exclude === 'function') {\n    return function (type) {\n      return !exclude(type);\n    };\n  }\n\n  return function () {\n    return true;\n  };\n};\n/**\n * @param {ApolloClient} client The Apollo client\n * @param {Object} options The introspection options\n */\n\nexport default (function (client, options) {\n  return __awaiter(_this, void 0, void 0, function () {\n    var schema, _a, queries, types, isResource, buildResource, potentialResources, filteredResources, resources;\n\n    return __generator(this, function (_b) {\n      switch (_b.label) {\n        case 0:\n          if (!options.schema) return [3\n          /*break*/\n          , 1];\n          _a = options.schema;\n          return [3\n          /*break*/\n          , 3];\n\n        case 1:\n          return [4\n          /*yield*/\n          , client.query({\n            fetchPolicy: 'network-only',\n            query: gql(templateObject_1 || (templateObject_1 = __makeTemplateObject([\"\\n                      \", \"\\n                  \"], [\"\\n                      \", \"\\n                  \"])), introspectionQuery)\n          }).then(function (_a) {\n            var __schema = _a.data.__schema;\n            return __schema;\n          })];\n\n        case 2:\n          _a = _b.sent();\n          _b.label = 3;\n\n        case 3:\n          schema = _a;\n          queries = schema.types.reduce(function (acc, type) {\n            if (type.name !== schema.queryType.name && type.name !== schema.mutationType.name) return acc;\n            return acc.concat(type.fields);\n          }, []);\n          types = schema.types.filter(function (type) {\n            return type.name !== schema.queryType.name && type.name !== schema.mutationType.name;\n          });\n\n          isResource = function isResource(type) {\n            return queries.some(function (query) {\n              return query.name === options.operationNames[GET_LIST](type);\n            }) && queries.some(function (query) {\n              return query.name === options.operationNames[GET_ONE](type);\n            });\n          };\n\n          buildResource = function buildResource(type) {\n            return ALL_TYPES.reduce(function (acc, aorFetchType) {\n              var _a;\n\n              return __assign({}, acc, (_a = {}, _a[aorFetchType] = queries.find(function (query) {\n                return options.operationNames[aorFetchType] && query.name === options.operationNames[aorFetchType](type);\n              }), _a));\n            }, {\n              type: type\n            });\n          };\n\n          potentialResources = types.filter(isResource);\n          filteredResources = potentialResources.filter(filterTypesByIncludeExclude(options));\n          resources = filteredResources.map(buildResource);\n          return [2\n          /*return*/\n          , {\n            types: types,\n            queries: queries,\n            resources: resources,\n            schema: schema\n          }];\n      }\n    });\n  });\n});\nvar templateObject_1;","var __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n\n      for (var p in s) {\n        if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n      }\n    }\n\n    return t;\n  };\n\n  return __assign.apply(this, arguments);\n};\n\nvar __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function step(result) {\n      result.done ? resolve(result.value) : new P(function (resolve) {\n        resolve(result.value);\n      }).then(fulfilled, rejected);\n    }\n\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\n\nvar __generator = this && this.__generator || function (thisArg, body) {\n  var _ = {\n    label: 0,\n    sent: function sent() {\n      if (t[0] & 1) throw t[1];\n      return t[1];\n    },\n    trys: [],\n    ops: []\n  },\n      f,\n      y,\n      t,\n      g;\n  return g = {\n    next: verb(0),\n    \"throw\": verb(1),\n    \"return\": verb(2)\n  }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function () {\n    return this;\n  }), g;\n\n  function verb(n) {\n    return function (v) {\n      return step([n, v]);\n    };\n  }\n\n  function step(op) {\n    if (f) throw new TypeError(\"Generator is already executing.\");\n\n    while (_) {\n      try {\n        if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n        if (y = 0, t) op = [op[0] & 2, t.value];\n\n        switch (op[0]) {\n          case 0:\n          case 1:\n            t = op;\n            break;\n\n          case 4:\n            _.label++;\n            return {\n              value: op[1],\n              done: false\n            };\n\n          case 5:\n            _.label++;\n            y = op[1];\n            op = [0];\n            continue;\n\n          case 7:\n            op = _.ops.pop();\n\n            _.trys.pop();\n\n            continue;\n\n          default:\n            if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {\n              _ = 0;\n              continue;\n            }\n\n            if (op[0] === 3 && (!t || op[1] > t[0] && op[1] < t[3])) {\n              _.label = op[1];\n              break;\n            }\n\n            if (op[0] === 6 && _.label < t[1]) {\n              _.label = t[1];\n              t = op;\n              break;\n            }\n\n            if (t && _.label < t[2]) {\n              _.label = t[2];\n\n              _.ops.push(op);\n\n              break;\n            }\n\n            if (t[2]) _.ops.pop();\n\n            _.trys.pop();\n\n            continue;\n        }\n\n        op = body.call(thisArg, _);\n      } catch (e) {\n        op = [6, e];\n        y = 0;\n      } finally {\n        f = t = 0;\n      }\n    }\n\n    if (op[0] & 5) throw op[1];\n    return {\n      value: op[0] ? op[1] : void 0,\n      done: true\n    };\n  }\n};\n\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n\n  for (var p in s) {\n    if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  }\n\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\n\nvar _a;\n\nvar _this = this;\n\nimport merge from 'lodash/merge';\nimport get from 'lodash/get';\nimport pluralize from 'pluralize';\nimport { GET_LIST, GET_ONE, GET_MANY, GET_MANY_REFERENCE, CREATE, UPDATE, DELETE } from 'ra-core';\nimport buildApolloClient from './buildApolloClient';\nimport { QUERY_TYPES as INNER_QUERY_TYPES, MUTATION_TYPES as INNER_MUTATION_TYPES, ALL_TYPES as INNER_ALL_TYPES } from './constants';\nimport defaultResolveIntrospection from './introspection';\nexport var QUERY_TYPES = INNER_QUERY_TYPES;\nexport var MUTATION_TYPES = INNER_MUTATION_TYPES;\nexport var ALL_TYPES = INNER_ALL_TYPES;\nvar defaultOptions = {\n  resolveIntrospection: defaultResolveIntrospection,\n  introspection: {\n    operationNames: (_a = {}, _a[GET_LIST] = function (resource) {\n      return \"all\" + pluralize(resource.name);\n    }, _a[GET_ONE] = function (resource) {\n      return \"\" + resource.name;\n    }, _a[GET_MANY] = function (resource) {\n      return \"all\" + pluralize(resource.name);\n    }, _a[GET_MANY_REFERENCE] = function (resource) {\n      return \"all\" + pluralize(resource.name);\n    }, _a[CREATE] = function (resource) {\n      return \"create\" + resource.name;\n    }, _a[UPDATE] = function (resource) {\n      return \"update\" + resource.name;\n    }, _a[DELETE] = function (resource) {\n      return \"delete\" + resource.name;\n    }, _a),\n    exclude: undefined,\n    include: undefined\n  }\n};\n\nvar getOptions = function getOptions(options, aorFetchType, resource) {\n  if (typeof options === 'function') {\n    return options(resource, aorFetchType);\n  }\n\n  return options;\n};\n\nexport default (function (options) {\n  return __awaiter(_this, void 0, void 0, function () {\n    var _a, clientObject, clientOptions, introspection, resolveIntrospection, buildQueryFactory, _b, override, otherOptions, client, introspectionResults, buildQuery, raDataProvider;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          _a = merge({}, defaultOptions, options), clientObject = _a.client, clientOptions = _a.clientOptions, introspection = _a.introspection, resolveIntrospection = _a.resolveIntrospection, buildQueryFactory = _a.buildQuery, _b = _a.override, override = _b === void 0 ? {} : _b, otherOptions = __rest(_a, [\"client\", \"clientOptions\", \"introspection\", \"resolveIntrospection\", \"buildQuery\", \"override\"]);\n\n          if (override && process.env.NODE_ENV === 'production') {\n            console.warn( // eslint-disable-line\n            'The override option is deprecated. You should instead wrap the buildQuery function provided by the dataProvider you use.');\n          }\n\n          client = clientObject || buildApolloClient(clientOptions);\n          if (!introspection) return [3\n          /*break*/\n          , 2];\n          return [4\n          /*yield*/\n          , resolveIntrospection(client, introspection)];\n\n        case 1:\n          introspectionResults = _c.sent();\n          _c.label = 2;\n\n        case 2:\n          buildQuery = buildQueryFactory(introspectionResults, otherOptions);\n\n          raDataProvider = function raDataProvider(aorFetchType, resource, params) {\n            var overriddenBuildQuery = get(override, resource + \".\" + aorFetchType);\n\n            var _a = overriddenBuildQuery ? __assign({}, buildQuery(aorFetchType, resource, params), overriddenBuildQuery(params)) : buildQuery(aorFetchType, resource, params),\n                parseResponse = _a.parseResponse,\n                query = __rest(_a, [\"parseResponse\"]);\n\n            if (QUERY_TYPES.includes(aorFetchType)) {\n              var apolloQuery_1 = __assign({}, query, {\n                fetchPolicy: 'network-only'\n              }, getOptions(otherOptions.query, aorFetchType, resource));\n\n              return client.query(apolloQuery_1).then(parseResponse);\n            }\n\n            var apolloQuery = __assign({\n              mutation: query.query,\n              variables: query.variables\n            }, getOptions(otherOptions.mutation, aorFetchType, resource));\n\n            return client.mutate(apolloQuery).then(parseResponse);\n          };\n\n          raDataProvider.observeRequest = function (aorFetchType, resource, params) {\n            var _a = buildQuery(aorFetchType, resource, params),\n                parseResponse = _a.parseResponse,\n                query = __rest(_a, [\"parseResponse\"]);\n\n            var apolloQuery = __assign({}, query, getOptions(otherOptions.watchQuery, aorFetchType, resource));\n\n            return client.watchQuery(apolloQuery).then(parseResponse);\n          };\n\n          raDataProvider.saga = function () {};\n\n          return [2\n          /*return*/\n          , raDataProvider];\n      }\n    });\n  });\n});","import buildVariables from './buildVariables';\nimport buildGqlQuery from './buildGqlQuery';\nimport getResponseParser from './getResponseParser';\nexport var buildQueryFactory = function buildQueryFactory(buildVariablesImpl, buildGqlQueryImpl, getResponseParserImpl) {\n  return function (introspectionResults) {\n    var knownResources = introspectionResults.resources.map(function (r) {\n      return r.type.name;\n    });\n    return function (aorFetchType, resourceName, params) {\n      var resource = introspectionResults.resources.find(function (r) {\n        return r.type.name === resourceName;\n      });\n\n      if (!resource) {\n        throw new Error(\"Unknown resource \" + resourceName + \". Make sure it has been declared on your server side schema. Known resources are \" + knownResources.join(', '));\n      }\n\n      var queryType = resource[aorFetchType];\n\n      if (!queryType) {\n        throw new Error(\"No query or mutation matching fetch type \" + aorFetchType + \" could be found for resource \" + resource.type.name);\n      }\n\n      var variables = buildVariablesImpl(introspectionResults)(resource, aorFetchType, params, queryType);\n      var query = buildGqlQueryImpl(introspectionResults)(resource, aorFetchType, queryType, variables);\n      var parseResponse = getResponseParserImpl(introspectionResults)(aorFetchType, resource, queryType);\n      return {\n        query: query,\n        variables: variables,\n        parseResponse: parseResponse\n      };\n    };\n  };\n};\nexport default buildQueryFactory(buildVariables, buildGqlQuery, getResponseParser);","var __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n\n      for (var p in s) {\n        if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n      }\n    }\n\n    return t;\n  };\n\n  return __assign.apply(this, arguments);\n};\n\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n\n  for (var p in s) {\n    if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  }\n\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\n\nimport { ApolloClient } from 'apollo-client';\nimport { HttpLink, InMemoryCache } from 'apollo-client-preset';\nexport default (function (options) {\n  if (!options) {\n    return new ApolloClient();\n  }\n\n  var cache = options.cache,\n      link = options.link,\n      uri = options.uri,\n      otherOptions = __rest(options, [\"cache\", \"link\", \"uri\"]);\n\n  var finalLink = link;\n  var finalCache = cache;\n\n  if (!link && uri) {\n    finalLink = new HttpLink({\n      uri: uri\n    });\n  }\n\n  if (!cache) {\n    finalCache = new InMemoryCache().restore({});\n  }\n\n  return new ApolloClient(__assign({\n    link: finalLink,\n    cache: finalCache\n  }, otherOptions));\n});","import { GET_LIST, GET_ONE, GET_MANY, GET_MANY_REFERENCE, CREATE, UPDATE, UPDATE_MANY, DELETE, DELETE_MANY } from 'ra-core';\nexport var QUERY_TYPES = [GET_LIST, GET_MANY, GET_MANY_REFERENCE, GET_ONE];\nexport var MUTATION_TYPES = [CREATE, UPDATE, DELETE, UPDATE_MANY, DELETE_MANY];\nexport var ALL_TYPES = QUERY_TYPES.concat(MUTATION_TYPES);","import { TypeKind } from 'graphql';\n/**\n * Ensure we get the real type even if the root type is NON_NULL or LIST\n * @param {GraphQLType} type\n */\n\nvar getFinalType = function getFinalType(type) {\n  if (type.kind === TypeKind.NON_NULL || type.kind === TypeKind.LIST) {\n    return getFinalType(type.ofType);\n  }\n\n  return type;\n};\n\nexport default getFinalType;","import { TypeKind } from 'graphql';\n\nvar isList = function isList(type) {\n  if (type.kind === TypeKind.NON_NULL) {\n    return isList(type.ofType);\n  }\n\n  return type.kind === TypeKind.LIST;\n};\n\nexport default isList;","var __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n\n      for (var p in s) {\n        if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n      }\n    }\n\n    return t;\n  };\n\n  return __assign.apply(this, arguments);\n};\n/* eslint-disable default-case */\n\n\nimport { GET_LIST, GET_ONE, GET_MANY, GET_MANY_REFERENCE, CREATE, UPDATE, DELETE } from 'ra-core';\nimport getFinalType from './getFinalType';\nimport isList from './isList';\n\nvar sanitizeValue = function sanitizeValue(type, value) {\n  if (type.name === 'Int') {\n    return parseInt(value, 10);\n  }\n\n  if (type.name === 'Float') {\n    return parseFloat(value);\n  }\n\n  return value;\n};\n\nvar castType = function castType(value, type) {\n  switch (type.kind + \":\" + type.name) {\n    case 'SCALAR:Int':\n      return Number(value);\n\n    case 'SCALAR:String':\n      return String(value);\n\n    case 'SCALAR:Boolean':\n      return Boolean(value);\n\n    default:\n      return value;\n  }\n};\n\nvar prepareParams = function prepareParams(params, queryType, introspectionResults) {\n  var result = {};\n\n  if (!params) {\n    return params;\n  }\n\n  Object.keys(params).forEach(function (key) {\n    var param = params[key];\n    var arg = null;\n\n    if (!param) {\n      result[key] = param;\n      return;\n    }\n\n    if (queryType && Array.isArray(queryType.args)) {\n      arg = queryType.args.find(function (item) {\n        return item.name === key;\n      });\n    }\n\n    if (param instanceof File) {\n      result[key] = param;\n      return;\n    }\n\n    if (param instanceof Object && !Array.isArray(param) && arg && arg.type.kind === 'INPUT_OBJECT') {\n      var args = introspectionResults.types.find(function (item) {\n        return item.kind === arg.type.kind && item.name === arg.type.name;\n      }).inputFields;\n      result[key] = prepareParams(param, {\n        args: args\n      }, introspectionResults);\n      return;\n    }\n\n    if (param instanceof Object && !Array.isArray(param)) {\n      result[key] = prepareParams(param, queryType, introspectionResults);\n      return;\n    }\n\n    if (!arg) {\n      result[key] = param;\n      return;\n    }\n\n    result[key] = castType(param, arg.type, introspectionResults.types);\n  });\n  return result;\n};\n\nvar buildGetListVariables = function buildGetListVariables(introspectionResults) {\n  return function (resource, aorFetchType, params) {\n    var filter = Object.keys(params.filter).reduce(function (acc, key) {\n      var _a, _b, _c, _d, _e, _f, _g;\n\n      if (key === 'ids') {\n        return __assign({}, acc, {\n          ids: params.filter[key]\n        });\n      }\n\n      if (typeof params.filter[key] === 'object') {\n        var type = introspectionResults.types.find(function (t) {\n          return t.name === resource.type.name + \"Filter\";\n        });\n        var filterSome = type.inputFields.find(function (t) {\n          return t.name === key + \"_some\";\n        });\n\n        if (filterSome) {\n          var filter_1 = Object.keys(params.filter[key]).reduce(function (acc, k) {\n            var _a;\n\n            return __assign({}, acc, (_a = {}, _a[k + \"_in\"] = params.filter[key][k], _a));\n          }, {});\n          return __assign({}, acc, (_a = {}, _a[key + \"_some\"] = filter_1, _a));\n        }\n      }\n\n      var parts = key.split('.');\n\n      if (parts.length > 1) {\n        if (parts[1] === 'id') {\n          var type_1 = introspectionResults.types.find(function (t) {\n            return t.name === resource.type.name + \"Filter\";\n          });\n          var filterSome = type_1.inputFields.find(function (t) {\n            return t.name === parts[0] + \"_some\";\n          });\n\n          if (filterSome) {\n            return __assign({}, acc, (_b = {}, _b[parts[0] + \"_some\"] = {\n              id: params.filter[key]\n            }, _b));\n          }\n\n          return __assign({}, acc, (_c = {}, _c[parts[0]] = {\n            id: params.filter[key]\n          }, _c));\n        }\n\n        var resourceField_1 = resource.type.fields.find(function (f) {\n          return f.name === parts[0];\n        });\n        var type = getFinalType(resourceField_1.type);\n        return __assign({}, acc, (_d = {}, _d[key] = sanitizeValue(type, params.filter[key]), _d));\n      }\n\n      var resourceField = resource.type.fields.find(function (f) {\n        return f.name === key;\n      });\n\n      if (resourceField) {\n        var type_2 = getFinalType(resourceField.type);\n        var isAList = isList(resourceField.type);\n\n        if (isAList) {\n          return __assign({}, acc, (_e = {}, _e[key] = Array.isArray(params.filter[key]) ? params.filter[key].map(function (value) {\n            return sanitizeValue(type_2, value);\n          }) : sanitizeValue(type_2, [params.filter[key]]), _e));\n        }\n\n        return __assign({}, acc, (_f = {}, _f[key] = sanitizeValue(type_2, params.filter[key]), _f));\n      }\n\n      return __assign({}, acc, (_g = {}, _g[key] = params.filter[key], _g));\n    }, {});\n    return {\n      page: parseInt(params.pagination.page, 10) - 1,\n      perPage: parseInt(params.pagination.perPage, 10),\n      sortField: params.sort.field,\n      sortOrder: params.sort.order,\n      filter: filter\n    };\n  };\n};\n\nvar buildCreateUpdateVariables = function buildCreateUpdateVariables() {\n  return function (resource, aorFetchType, params, queryType) {\n    return Object.keys(params.data).reduce(function (acc, key) {\n      var _a, _b, _c;\n\n      if (Array.isArray(params.data[key])) {\n        var arg = queryType.args.find(function (a) {\n          return a.name === key + \"Ids\";\n        });\n\n        if (arg) {\n          return __assign({}, acc, (_a = {}, _a[key + \"Ids\"] = params.data[key].map(function (_a) {\n            var id = _a.id;\n            return id;\n          }), _a));\n        }\n      }\n\n      if (typeof params.data[key] === 'object') {\n        var arg = queryType.args.find(function (a) {\n          return a.name === key + \"Id\";\n        });\n\n        if (arg) {\n          return __assign({}, acc, (_b = {}, _b[key + \"Id\"] = params.data[key].id, _b));\n        }\n      }\n\n      return __assign({}, acc, (_c = {}, _c[key] = params.data[key], _c));\n    }, {});\n  };\n};\n\nexport default (function (introspectionResults) {\n  return function (resource, aorFetchType, params, queryType) {\n    var _a;\n\n    var preparedParams = prepareParams(params, queryType, introspectionResults);\n\n    switch (aorFetchType) {\n      case GET_LIST:\n        {\n          return buildGetListVariables(introspectionResults)(resource, aorFetchType, preparedParams, queryType);\n        }\n\n      case GET_MANY:\n        return {\n          filter: {\n            ids: preparedParams.ids\n          }\n        };\n\n      case GET_MANY_REFERENCE:\n        {\n          var parts = preparedParams.target.split('.');\n          return {\n            filter: (_a = {}, _a[parts[0] + \"Id\"] = preparedParams.id, _a)\n          };\n        }\n\n      case GET_ONE:\n        return {\n          id: preparedParams.id\n        };\n\n      case UPDATE:\n        {\n          return buildCreateUpdateVariables(introspectionResults)(resource, aorFetchType, preparedParams, queryType);\n        }\n\n      case CREATE:\n        {\n          return buildCreateUpdateVariables(introspectionResults)(resource, aorFetchType, preparedParams, queryType);\n        }\n\n      case DELETE:\n        return {\n          id: preparedParams.id\n        };\n    }\n  };\n});","import { TypeKind } from 'graphql';\n\nvar isRequired = function isRequired(type) {\n  if (type.kind === TypeKind.LIST) {\n    return isRequired(type.ofType);\n  }\n\n  return type.kind === TypeKind.NON_NULL;\n};\n\nexport default isRequired;","var __rest = this && this.__rest || function (s, e) {\n  var t = {};\n\n  for (var p in s) {\n    if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  }\n\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\n\nimport { GET_LIST, GET_MANY, GET_MANY_REFERENCE, DELETE } from 'ra-core';\nimport { QUERY_TYPES } from 'ra-data-graphql';\nimport { TypeKind } from 'graphql';\nimport * as gqlTypes from 'graphql-ast-types-browser';\nimport getFinalType from './getFinalType';\nimport isList from './isList';\nimport isRequired from './isRequired';\nexport var buildFields = function buildFields(introspectionResults, path) {\n  if (path === void 0) {\n    path = [];\n  }\n\n  return function (fields) {\n    return fields.reduce(function (acc, field) {\n      var type = getFinalType(field.type);\n\n      if (type.name.startsWith('_')) {\n        return acc;\n      }\n\n      if (type.kind !== TypeKind.OBJECT && type.kind !== TypeKind.INTERFACE) {\n        return acc.concat([gqlTypes.field(gqlTypes.name(field.name))]);\n      }\n\n      var linkedResource = introspectionResults.resources.find(function (r) {\n        return r.type.name === type.name;\n      });\n\n      if (linkedResource) {\n        return acc.concat([gqlTypes.field(gqlTypes.name(field.name), null, null, null, gqlTypes.selectionSet([gqlTypes.field(gqlTypes.name('id'))]))]);\n      }\n\n      var linkedType = introspectionResults.types.find(function (t) {\n        return t.name === type.name;\n      });\n\n      if (linkedType && !path.includes(linkedType.name)) {\n        path.push(linkedType.name);\n        return acc.concat([gqlTypes.field(gqlTypes.name(field.name), null, null, null, gqlTypes.selectionSet(buildFields(introspectionResults, path)(linkedType.fields)))]);\n      } // NOTE: We might have to handle linked types which are not resources but will have to be careful about\n      // ending with endless circular dependencies\n\n\n      return acc;\n    }, []);\n  };\n};\nexport var getArgType = function getArgType(arg) {\n  var type = getFinalType(arg.type);\n  var required = isRequired(arg.type);\n  var list = isList(arg.type);\n\n  if (list) {\n    if (required) {\n      return gqlTypes.listType(gqlTypes.nonNullType(gqlTypes.namedType(gqlTypes.name(type.name))));\n    }\n\n    return gqlTypes.listType(gqlTypes.namedType(gqlTypes.name(type.name)));\n  }\n\n  if (required) {\n    return gqlTypes.nonNullType(gqlTypes.namedType(gqlTypes.name(type.name)));\n  }\n\n  return gqlTypes.namedType(gqlTypes.name(type.name));\n};\nexport var buildArgs = function buildArgs(query, variables) {\n  if (query.args.length === 0) {\n    return [];\n  }\n\n  var validVariables = Object.keys(variables).filter(function (k) {\n    return typeof variables[k] !== 'undefined';\n  });\n  var args = query.args.filter(function (a) {\n    return validVariables.includes(a.name);\n  }).reduce(function (acc, arg) {\n    return acc.concat([gqlTypes.argument(gqlTypes.name(arg.name), gqlTypes.variable(gqlTypes.name(arg.name)))]);\n  }, []);\n  return args;\n};\nexport var buildApolloArgs = function buildApolloArgs(query, variables) {\n  if (query.args.length === 0) {\n    return [];\n  }\n\n  var validVariables = Object.keys(variables).filter(function (k) {\n    return typeof variables[k] !== 'undefined';\n  });\n  var args = query.args.filter(function (a) {\n    return validVariables.includes(a.name);\n  }).reduce(function (acc, arg) {\n    return acc.concat([gqlTypes.variableDefinition(gqlTypes.variable(gqlTypes.name(arg.name)), getArgType(arg))]);\n  }, []);\n  return args;\n};\nexport default (function (introspectionResults) {\n  return function (resource, aorFetchType, queryType, variables) {\n    var sortField = variables.sortField,\n        sortOrder = variables.sortOrder,\n        metaVariables = __rest(variables, [\"sortField\", \"sortOrder\"]);\n\n    var apolloArgs = buildApolloArgs(queryType, variables);\n    var args = buildArgs(queryType, variables);\n    var metaArgs = buildArgs(queryType, metaVariables);\n    var fields = buildFields(introspectionResults)(resource.type.fields);\n\n    if (aorFetchType === GET_LIST || aorFetchType === GET_MANY || aorFetchType === GET_MANY_REFERENCE) {\n      return gqlTypes.document([gqlTypes.operationDefinition('query', gqlTypes.selectionSet([gqlTypes.field(gqlTypes.name(queryType.name), gqlTypes.name('items'), args, null, gqlTypes.selectionSet(fields)), gqlTypes.field(gqlTypes.name(\"_\" + queryType.name + \"Meta\"), gqlTypes.name('total'), metaArgs, null, gqlTypes.selectionSet([gqlTypes.field(gqlTypes.name('count'))]))]), gqlTypes.name(queryType.name), apolloArgs)]);\n    }\n\n    if (aorFetchType === DELETE) {\n      return gqlTypes.document([gqlTypes.operationDefinition('mutation', gqlTypes.selectionSet([gqlTypes.field(gqlTypes.name(queryType.name), gqlTypes.name('data'), args, null, gqlTypes.selectionSet([gqlTypes.field(gqlTypes.name('id'))]))]), gqlTypes.name(queryType.name), apolloArgs)]);\n    }\n\n    return gqlTypes.document([gqlTypes.operationDefinition(QUERY_TYPES.includes(aorFetchType) ? 'query' : 'mutation', gqlTypes.selectionSet([gqlTypes.field(gqlTypes.name(queryType.name), gqlTypes.name('data'), args, null, gqlTypes.selectionSet(fields))]), gqlTypes.name(queryType.name), apolloArgs)]);\n  };\n});","var __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n\n      for (var p in s) {\n        if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n      }\n    }\n\n    return t;\n  };\n\n  return __assign.apply(this, arguments);\n};\n\nimport { TypeKind } from 'graphql';\nimport { GET_LIST, GET_MANY, GET_MANY_REFERENCE } from 'ra-core';\nimport getFinalType from './getFinalType';\n\nvar sanitizeResource = function sanitizeResource(introspectionResults, resource) {\n  return function (data) {\n    var result = Object.keys(data).reduce(function (acc, key) {\n      var _a, _b, _c, _d;\n\n      if (key.startsWith('_')) {\n        return acc;\n      }\n\n      var field = resource.type.fields.find(function (f) {\n        return f.name === key;\n      });\n      var type = getFinalType(field.type);\n\n      if (type.kind !== TypeKind.OBJECT) {\n        return __assign({}, acc, (_a = {}, _a[field.name] = data[field.name], _a));\n      } // FIXME: We might have to handle linked types which are not resources but will have to be careful about\n      // endless circular dependencies\n\n\n      var linkedResource = introspectionResults.resources.find(function (r) {\n        return r.type.name === type.name;\n      });\n\n      if (linkedResource) {\n        var linkedResourceData = data[field.name];\n\n        if (Array.isArray(linkedResourceData)) {\n          return __assign({}, acc, (_b = {}, _b[field.name] = data[field.name].map(sanitizeResource(introspectionResults, linkedResource)), _b[field.name + \"Ids\"] = data[field.name].map(function (d) {\n            return d.id;\n          }), _b));\n        }\n\n        return __assign({}, acc, (_c = {}, _c[field.name + \".id\"] = linkedResourceData ? data[field.name].id : undefined, _c[field.name] = linkedResourceData ? sanitizeResource(introspectionResults, linkedResource)(data[field.name]) : undefined, _c));\n      }\n\n      return __assign({}, acc, (_d = {}, _d[field.name] = data[field.name], _d));\n    }, {});\n    return result;\n  };\n};\n\nexport default (function (introspectionResults) {\n  return function (aorFetchType, resource) {\n    return function (response) {\n      var sanitize = sanitizeResource(introspectionResults, resource);\n      var data = response.data;\n\n      if (aorFetchType === GET_LIST || aorFetchType === GET_MANY || aorFetchType === GET_MANY_REFERENCE) {\n        return {\n          data: response.data.items.map(sanitize),\n          total: response.data.total.count\n        };\n      }\n\n      return {\n        data: sanitize(data.data)\n      };\n    };\n  };\n});","var __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n\n      for (var p in s) {\n        if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n      }\n    }\n\n    return t;\n  };\n\n  return __assign.apply(this, arguments);\n};\n\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n\n  for (var p in s) {\n    if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  }\n\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\n\nimport merge from 'lodash/merge';\nimport buildDataProvider from 'ra-data-graphql';\nimport { DELETE, DELETE_MANY, UPDATE, UPDATE_MANY } from 'ra-core';\nimport defaultBuildQuery from './buildQuery';\nvar defaultOptions = {\n  buildQuery: defaultBuildQuery\n};\nexport var buildQuery = defaultBuildQuery;\nexport default (function (options) {\n  return buildDataProvider(merge({}, defaultOptions, options)).then(function (defaultDataProvider) {\n    return function (fetchType, resource, params) {\n      // This provider does not support multiple deletions so instead we send multiple DELETE requests\n      // This can be optimized using the apollo-link-batch-http link\n      if (fetchType === DELETE_MANY) {\n        var ids = params.ids,\n            otherParams_1 = __rest(params, [\"ids\"]);\n\n        return Promise.all(ids.map(function (id) {\n          return defaultDataProvider(DELETE, resource, __assign({\n            id: id\n          }, otherParams_1));\n        })).then(function (results) {\n          var data = results.reduce(function (acc, _a) {\n            var data = _a.data;\n            return acc.concat([data.id]);\n          }, []);\n          return {\n            data: data\n          };\n        });\n      } // This provider does not support multiple deletions so instead we send multiple UPDATE requests\n      // This can be optimized using the apollo-link-batch-http link\n\n\n      if (fetchType === UPDATE_MANY) {\n        var ids = params.ids,\n            data_1 = params.data,\n            otherParams_2 = __rest(params, [\"ids\", \"data\"]);\n\n        return Promise.all(ids.map(function (id) {\n          return defaultDataProvider(UPDATE, resource, __assign({\n            data: __assign({\n              id: id\n            }, data_1)\n          }, otherParams_2));\n        })).then(function (results) {\n          var data = results.reduce(function (acc, _a) {\n            var data = _a.data;\n            return acc.concat([data.id]);\n          }, []);\n          return {\n            data: data\n          };\n        });\n      }\n\n      return defaultDataProvider(fetchType, resource, params);\n    };\n  });\n});","import buildApolloClient, {\n    buildQuery as buildQueryFactory,\n} from 'ra-data-graphql-simple';\nimport { DELETE } from 'ra-core';\nimport gql from 'graphql-tag';\nconst getGqlResource = resource => {\n    switch (resource) {\n        case 'customers':\n            return 'Customer';\n\n        case 'categories':\n            return 'Category';\n\n        case 'commands':\n            return 'Command';\n\n        case 'products':\n            return 'Product';\n\n        case 'reviews':\n            return 'Review';\n\n        case 'invoices':\n            return 'Invoice';\n\n        default:\n            throw new Error(`Unknown resource ${resource}`);\n    }\n};\n\nconst customBuildQuery = introspectionResults => {\n    const buildQuery = buildQueryFactory(introspectionResults);\n\n    return (type, resource, params) => {\n        if (type === DELETE) {\n            return {\n                query: gql`mutation remove${resource}($id: ID!) {\n                    remove${resource}(id: $id)\n                }`,\n                variables: { id: params.id },\n                parseResponse: ({ data }) => {\n                    if (data[`remove${resource}`]) {\n                        return { data: { id: params.id } };\n                    }\n\n                    throw new Error(`Could not delete ${resource}`);\n                },\n            };\n        }\n\n        return buildQuery(type, resource, params);\n    };\n};\n\nexport default () => {\n    return buildApolloClient({\n        clientOptions: {\n            uri: 'http://localhost:4000/graphql',\n        },\n        introspection: {\n            operationNames: {\n                [DELETE]: resource => `remove${resource.name}`,\n            },\n        },\n        buildQuery: customBuildQuery,\n    }).then(dataProvider => (type, resource, params) =>\n        dataProvider(type, getGqlResource(resource), params)\n    );\n};\n"],"sourceRoot":""}